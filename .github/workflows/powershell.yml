# For more information on PSScriptAnalyzer in general, see https://github.com/PowerShell/PSScriptAnalyzer

name: Test PowerShell

on:
  push:
    branches: [ "main" ]
    paths:
    - '**.ps1'
  pull_request:
    branches: [ "main" ]
    paths:
    - '**.ps1'

permissions:
  contents: read

jobs:
  lint-with-PSScriptAnalyzer:  
    name: Install and run PSScriptAnalyzer
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup PowerShell module cache
        id: cacher
        uses: actions/cache@v4
        with:
          path: "~/.local/share/powershell/Modules"
          key: ${{ runner.os }}-PSScriptAnalyzer
      - name: Install PSScriptAnalyzer module
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module PSScriptAnalyzer -ErrorAction Stop
      - name: Lint with PSScriptAnalyzer
        shell: pwsh
        run: |
          Invoke-ScriptAnalyzer -Path *.ps1 -Recurse -Outvariable issues
          $errors   = $issues.Where({$_.Severity -eq 'Error'})
          $warnings = $issues.Where({$_.Severity -eq 'Warning'})
          if ($errors) {
              Write-Error "There were $($errors.Count) errors and $($warnings.Count) warnings total." -ErrorAction Stop
          } else {
              Write-Output "There were $($errors.Count) errors and $($warnings.Count) warnings total."
          }
